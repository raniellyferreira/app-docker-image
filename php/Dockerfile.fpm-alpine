ARG PHP_VERSION=8.3

FROM php:${PHP_VERSION}-fpm-alpine

RUN set -ex; \
    apk add --no-cache --no-cache \
        bash \
        tzdata \
        supervisor \
        nginx \
        imagemagick \
        ghostscript

# Instalador de dependencias do PHP
RUN set -ex; \
    curl -sSLf -o /usr/local/bin/install-php-extensions \
        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions

# Instalação do composer
RUN set -ex; \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# xDebug install
ENV XDEBUG_MODE debug

RUN set -ex; \
    install-php-extensions xdebug \
    && echo "xdebug.mode=${XDEBUG_MODE}" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini

# Install dependencies
RUN set -ex; \
    \
    apk add --no-cache --virtual .build-deps \
        bzip2-dev \
        freetype-dev \
        libjpeg-turbo-dev \
        imagemagick-dev \
        libpng-dev \
        libwebp-dev \
        libzip-dev \
        libsodium-dev \
        postgresql-dev \
        libxpm-dev \
    ; \
    \
    install-php-extensions \
        bz2 \
        gd \
        mysqli \
        opcache \
        zip \
        pdo \
        pdo_mysql \
        pgsql \
        pdo_pgsql \
        iconv \
        intl \
        bcmath \
        calendar \
        exif \
        gettext \
        pcntl \
        shmop \
        sockets \
        xmlrpc \
        xsl \
    ; \
    \
    # Optional extensions
    install-php-extensions mcrypt || : ; \
    install-php-extensions imagick || : ; \
    \
    runDeps="$( \
        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )"; \
    apk add --no-network --virtual .phpexts-rundeps $runDeps; \
    apk del --no-network .build-deps

# set recommended PHP.ini settings
ENV DISPLAY_ERRORS On
ENV ERROR_REPORTING "E_ALL & ~E_DEPRECATED & ~E_STRICT"
ENV MAX_EXECUTION_TIME 60
ENV MEMORY_LIMIT 128M
ENV UPLOAD_LIMIT 2M
ENV ALLOW_URL_FOPEN Off
ENV TZ UTC
ENV SESSION_SAVE_PATH /sessions

# Set environment variables for OPcache
# see https://secure.php.net/manual/en/opcache.installation.php
ENV OPCACHE_ENABLE="1" \
    OPCACHE_MEMORY_CONSUMPTION="128" \
    OPCACHE_INTERNED_STRINGS_BUFFER="8" \
    OPCACHE_MAX_ACCELERATED_FILES="5000" \
    OPCACHE_REVALIDATE_FREQ="5" \
    OPCACHE_FAST_SHUTDOWN="1" \
    OPCACHE_ENABLE_CLI="1" \
    OPCACHE_SAVE_COMMENTS="0" \
    OPCACHE_VALIDATE_TIMESTAMPS="0"

RUN set -ex; \
    \
    # Use the default production configuration
    mv -f "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"; \
    \
    { \
        echo 'opcache.enable=${OPCACHE_ENABLE}'; \
        echo 'opcache.memory_consumption=${OPCACHE_MEMORY_CONSUMPTION}'; \
        echo 'opcache.interned_strings_buffer=${OPCACHE_INTERNED_STRINGS_BUFFER}'; \
        echo 'opcache.max_accelerated_files=${OPCACHE_MAX_ACCELERATED_FILES}'; \
        echo 'opcache.revalidate_freq=${OPCACHE_REVALIDATE_FREQ}'; \
        echo 'opcache.fast_shutdown=${OPCACHE_FAST_SHUTDOWN}'; \
        echo 'opcache.enable_cli=${OPCACHE_ENABLE_CLI}'; \
        echo 'opcache.save_comments=${OPCACHE_SAVE_COMMENTS}'; \
        echo 'opcache.validate_timestamps=${OPCACHE_VALIDATE_TIMESTAMPS}'; \
    } > $PHP_INI_DIR/conf.d/opcache-recommended.ini; \
    \
    { \
        echo 'session.cookie_httponly=1'; \
        echo 'session.use_strict_mode=1'; \
    } > $PHP_INI_DIR/conf.d/session-strict.ini; \
    \
    { \
        echo 'allow_url_fopen=${ALLOW_URL_FOPEN}'; \
        echo 'max_execution_time=${MAX_EXECUTION_TIME}'; \
        echo 'max_input_vars=10000'; \
        echo 'memory_limit=${MEMORY_LIMIT}'; \
        echo 'post_max_size=${UPLOAD_LIMIT}'; \
        echo 'upload_max_filesize=${UPLOAD_LIMIT}'; \
        echo 'date.timezone=${TZ}'; \
        echo 'session.save_path=${SESSION_SAVE_PATH}'; \
    } > $PHP_INI_DIR/conf.d/custom-misc.ini; \
    \
    { \
        echo 'display_errors=${DISPLAY_ERRORS}'; \
        echo 'display_startup_errors=On'; \
        echo 'log_errors=On'; \
        echo 'error_log=/dev/stderr'; \
		echo 'ignore_repeated_errors=On'; \
		echo 'ignore_repeated_source=Off'; \
		echo 'html_errors=Off'; \
        echo 'error_reporting=${ERROR_REPORTING}'; \
    } > $PHP_INI_DIR/conf.d/logs.ini;

WORKDIR /var/www/html

# Composer config
ENV COMPOSER_PROCESS_TIMEOUT 3600
ENV COMPOSER_MEMORY_LIMIT -1

RUN set -xe; \
    \
    composer config --global discard-changes true \
    && echo "{}" > ~/.composer/composer.json \
    ; \
    mkdir $SESSION_SAVE_PATH; \
    chmod 1777 $SESSION_SAVE_PATH; \
    chown www-data:www-data $SESSION_SAVE_PATH

COPY fpm/nginx.conf /etc/nginx/nginx.conf
COPY fpm/nginx.default.conf /etc/nginx/sites-available/default
COPY fpm/www.default.conf /usr/local/etc/php-fpm.d/www.conf
COPY fpm/supervisor.basic.conf /etc/supervisor/supervisord.conf

RUN set -ex; \
    mkdir -p /run/nginx /etc/nginx/sites-enabled; \
    ln -sf /dev/null /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default \
    && rm -vf /var/www/html/*.html \
    && rm -vf /etc/nginx/conf.d/default.conf \
    && nginx -t

# Permissões
RUN chown -R www-data:www-data /var/www/html

CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]
